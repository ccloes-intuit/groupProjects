// File: Scores.java - implementation of the author's class complete
// with methods 'add' and 'remove'
// Author: Mike Qualls

package chapter3.arrays;


public class ScoreBoard {
	// instance variables
	public int numEntries = 10;
	protected GameEntry[] board;
	
	// methods, constructor(s) first
	public ScoreBoard () {
		// allocate array storage and initialize count of objects 
		// to zero
		board = new GameEntry [numEntries];
		numEntries = 0;
	}  // end default constructor
	public ScoreBoard (int capacity) {
		board = new GameEntry [capacity];
	}  // end constructor with args
	
	// the 'add' and 'remove' methods  (these are the 'more' methods)
	public void add (GameEntry e) {
		// the score to add
		int newScore = e.getScore ();
		
		// is the array full or is the new score greater than the last one
		if (numEntries < board.length || newScore > board [numEntries - 1].getScore ()) {
			// don't drop a score
			if (numEntries < board.length)
				numEntries++;
			
			//shift lower scores to the right
			int j = numEntries - 1;
			while (j > 0 && board [j - 1].getScore () < newScore) {
				board [j] = board [j - 1];
				j--;
			}  // while loop
			
			// insert the new GameEntry object
			board [j] = e;
		}  // end if array is full ...
	} // end method add
	
		
	public GameEntry remove (int index) throws IndexOutOfBoundsException {
		// check to see that 'index' is a valid subscript
		if ((index < 0) || (index >= numEntries))
			throw new IndexOutOfBoundsException ("Invalid Index: " + index);
		
		GameEntry temp = board [index];			// save the object to be removed
		for (int j = index; j < numEntries; j++)
			board [j] = board [j + 1];		// move entry to the left overwriting the element
												// being removed
		
		// null out the last score
		board [numEntries - 1] = null;
		
		// change the count of entries
		numEntries--;
		
		// return the 'removed' object
		return temp;
			
	}  // end method remove
	
	// create a string representation of a Scores object
	public String toString () {
		String s = "[";
		
		// iterate through the array adding strings
		for (int i = 0; i < numEntries; i++) {
			// if not the first object, add the ", "
			if (i > 0)
				s += ", ";
			
			// now add the object depending on the toString of GameEntry
			s += board [i];
		}  // end loop to add strings
		
		return s + "]";
	}  // end method toString

}  // end class ScoreBoard
